//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YarlHospitalWPF.YarlHospital_Ref {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/YarlHospitalWCF")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Full_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Patient_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelephoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Full_Name {
            get {
                return this.Full_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Full_NameField, value) != true)) {
                    this.Full_NameField = value;
                    this.RaisePropertyChanged("Full_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((this.MobileField.Equals(value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NIC {
            get {
                return this.NICField;
            }
            set {
                if ((object.ReferenceEquals(this.NICField, value) != true)) {
                    this.NICField = value;
                    this.RaisePropertyChanged("NIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient_ID {
            get {
                return this.Patient_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Patient_IDField, value) != true)) {
                    this.Patient_IDField = value;
                    this.RaisePropertyChanged("Patient_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((this.TelephoneField.Equals(value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/YarlHospitalWCF")]
    [System.SerializableAttribute()]
    public partial class Appointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Appointment_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Doctor_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Full_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Patient_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Appointment_ID {
            get {
                return this.Appointment_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Appointment_IDField, value) != true)) {
                    this.Appointment_IDField = value;
                    this.RaisePropertyChanged("Appointment_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doctor_ID {
            get {
                return this.Doctor_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Doctor_IDField, value) != true)) {
                    this.Doctor_IDField = value;
                    this.RaisePropertyChanged("Doctor_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Full_Name {
            get {
                return this.Full_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Full_NameField, value) != true)) {
                    this.Full_NameField = value;
                    this.RaisePropertyChanged("Full_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient_ID {
            get {
                return this.Patient_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Patient_IDField, value) != true)) {
                    this.Patient_IDField = value;
                    this.RaisePropertyChanged("Patient_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((this.TelephoneField.Equals(value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Drug", Namespace="http://schemas.datacontract.org/2004/07/YarlHospitalWCF")]
    [System.SerializableAttribute()]
    public partial class Drug : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Date_of_ExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Date_of_ManfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Drug_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Drug_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Scientific_NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date_of_Exp {
            get {
                return this.Date_of_ExpField;
            }
            set {
                if ((object.ReferenceEquals(this.Date_of_ExpField, value) != true)) {
                    this.Date_of_ExpField = value;
                    this.RaisePropertyChanged("Date_of_Exp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date_of_Manf {
            get {
                return this.Date_of_ManfField;
            }
            set {
                if ((object.ReferenceEquals(this.Date_of_ManfField, value) != true)) {
                    this.Date_of_ManfField = value;
                    this.RaisePropertyChanged("Date_of_Manf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Drug_ID {
            get {
                return this.Drug_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Drug_IDField, value) != true)) {
                    this.Drug_IDField = value;
                    this.RaisePropertyChanged("Drug_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Drug_Name {
            get {
                return this.Drug_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Drug_NameField, value) != true)) {
                    this.Drug_NameField = value;
                    this.RaisePropertyChanged("Drug_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Scientific_Name {
            get {
                return this.Scientific_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Scientific_NameField, value) != true)) {
                    this.Scientific_NameField = value;
                    this.RaisePropertyChanged("Scientific_Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Treatment", Namespace="http://schemas.datacontract.org/2004/07/YarlHospitalWCF")]
    [System.SerializableAttribute()]
    public partial class Treatment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Diagnostic_DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Drugs_UsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Full_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Next_Visit_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Next_Visit_TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Num_of_DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Patient_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Times_Per_DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Treatment_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Visit_DateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnostic_Details {
            get {
                return this.Diagnostic_DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.Diagnostic_DetailsField, value) != true)) {
                    this.Diagnostic_DetailsField = value;
                    this.RaisePropertyChanged("Diagnostic_Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Drugs_Used {
            get {
                return this.Drugs_UsedField;
            }
            set {
                if ((object.ReferenceEquals(this.Drugs_UsedField, value) != true)) {
                    this.Drugs_UsedField = value;
                    this.RaisePropertyChanged("Drugs_Used");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Full_Name {
            get {
                return this.Full_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Full_NameField, value) != true)) {
                    this.Full_NameField = value;
                    this.RaisePropertyChanged("Full_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Next_Visit_Date {
            get {
                return this.Next_Visit_DateField;
            }
            set {
                if ((object.ReferenceEquals(this.Next_Visit_DateField, value) != true)) {
                    this.Next_Visit_DateField = value;
                    this.RaisePropertyChanged("Next_Visit_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Next_Visit_Time {
            get {
                return this.Next_Visit_TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.Next_Visit_TimeField, value) != true)) {
                    this.Next_Visit_TimeField = value;
                    this.RaisePropertyChanged("Next_Visit_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Num_of_Days {
            get {
                return this.Num_of_DaysField;
            }
            set {
                if ((this.Num_of_DaysField.Equals(value) != true)) {
                    this.Num_of_DaysField = value;
                    this.RaisePropertyChanged("Num_of_Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patient_ID {
            get {
                return this.Patient_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Patient_IDField, value) != true)) {
                    this.Patient_IDField = value;
                    this.RaisePropertyChanged("Patient_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Times_Per_Day {
            get {
                return this.Times_Per_DayField;
            }
            set {
                if ((this.Times_Per_DayField.Equals(value) != true)) {
                    this.Times_Per_DayField = value;
                    this.RaisePropertyChanged("Times_Per_Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Treatment_ID {
            get {
                return this.Treatment_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Treatment_IDField, value) != true)) {
                    this.Treatment_IDField = value;
                    this.RaisePropertyChanged("Treatment_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visit_Date {
            get {
                return this.Visit_DateField;
            }
            set {
                if ((object.ReferenceEquals(this.Visit_DateField, value) != true)) {
                    this.Visit_DateField = value;
                    this.RaisePropertyChanged("Visit_Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/YarlHospitalWCF")]
    [System.SerializableAttribute()]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Doctor_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Doctor_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialistField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((object.ReferenceEquals(this.DOBField, value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doctor_ID {
            get {
                return this.Doctor_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Doctor_IDField, value) != true)) {
                    this.Doctor_IDField = value;
                    this.RaisePropertyChanged("Doctor_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doctor_Name {
            get {
                return this.Doctor_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Doctor_NameField, value) != true)) {
                    this.Doctor_NameField = value;
                    this.RaisePropertyChanged("Doctor_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((this.MobileField.Equals(value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NIC {
            get {
                return this.NICField;
            }
            set {
                if ((object.ReferenceEquals(this.NICField, value) != true)) {
                    this.NICField = value;
                    this.RaisePropertyChanged("NIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialist {
            get {
                return this.SpecialistField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialistField, value) != true)) {
                    this.SpecialistField = value;
                    this.RaisePropertyChanged("Specialist");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/YarlHospitalWCF")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Balance_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Paid_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Payment_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Total_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Balance_Amount {
            get {
                return this.Balance_AmountField;
            }
            set {
                if ((this.Balance_AmountField.Equals(value) != true)) {
                    this.Balance_AmountField = value;
                    this.RaisePropertyChanged("Balance_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Paid_Amount {
            get {
                return this.Paid_AmountField;
            }
            set {
                if ((this.Paid_AmountField.Equals(value) != true)) {
                    this.Paid_AmountField = value;
                    this.RaisePropertyChanged("Paid_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payment_ID {
            get {
                return this.Payment_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Payment_IDField, value) != true)) {
                    this.Payment_IDField = value;
                    this.RaisePropertyChanged("Payment_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total_Amount {
            get {
                return this.Total_AmountField;
            }
            set {
                if ((this.Total_AmountField.Equals(value) != true)) {
                    this.Total_AmountField = value;
                    this.RaisePropertyChanged("Total_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="YarlHospital_Ref.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Patient", ReplyAction="http://tempuri.org/IService1/Add_PatientResponse")]
        void Add_Patient(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Patient", ReplyAction="http://tempuri.org/IService1/Add_PatientResponse")]
        System.Threading.Tasks.Task Add_PatientAsync(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_patients", ReplyAction="http://tempuri.org/IService1/get_patientsResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Patient[] get_patients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_patients", ReplyAction="http://tempuri.org/IService1/get_patientsResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> get_patientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update_patient", ReplyAction="http://tempuri.org/IService1/update_patientResponse")]
        void update_patient(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update_patient", ReplyAction="http://tempuri.org/IService1/update_patientResponse")]
        System.Threading.Tasks.Task update_patientAsync(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/view_patient", ReplyAction="http://tempuri.org/IService1/view_patientResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Patient view_patient(string pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/view_patient", ReplyAction="http://tempuri.org/IService1/view_patientResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient> view_patientAsync(string pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search", ReplyAction="http://tempuri.org/IService1/searchResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Patient[] search(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search", ReplyAction="http://tempuri.org/IService1/searchResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> searchAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_patient_name", ReplyAction="http://tempuri.org/IService1/search_patient_nameResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Patient[] search_patient_name(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_patient_name", ReplyAction="http://tempuri.org/IService1/search_patient_nameResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> search_patient_nameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_nic", ReplyAction="http://tempuri.org/IService1/search_nicResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Patient[] search_nic(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_nic", ReplyAction="http://tempuri.org/IService1/search_nicResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> search_nicAsync(string nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_patient_id", ReplyAction="http://tempuri.org/IService1/get_max_patient_idResponse")]
        string get_max_patient_id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_patient_id", ReplyAction="http://tempuri.org/IService1/get_max_patient_idResponse")]
        System.Threading.Tasks.Task<string> get_max_patient_idAsync();
        
        // CODEGEN: Generating message contract since the wrapper name (view_Patient) of message view_PatientRequest does not match the default value (view_Patient1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/view_Patient", ReplyAction="http://tempuri.org/IService1/view_PatientResponse")]
        YarlHospitalWPF.YarlHospital_Ref.view_PatientResponse view_Patient1(YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/view_Patient", ReplyAction="http://tempuri.org/IService1/view_PatientResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.view_PatientResponse> view_Patient1Async(YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Appointment", ReplyAction="http://tempuri.org/IService1/Add_AppointmentResponse")]
        void Add_Appointment(string aid, string did, string pid, string pname, int tele, string date, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Appointment", ReplyAction="http://tempuri.org/IService1/Add_AppointmentResponse")]
        System.Threading.Tasks.Task Add_AppointmentAsync(string aid, string did, string pid, string pname, int tele, string date, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Appointment_List", ReplyAction="http://tempuri.org/IService1/Get_Appointment_ListResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Appointment[] Get_Appointment_List();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Appointment_List", ReplyAction="http://tempuri.org/IService1/Get_Appointment_ListResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Appointment[]> Get_Appointment_ListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Appoinment", ReplyAction="http://tempuri.org/IService1/Update_AppoinmentResponse")]
        void Update_Appoinment(string aid, string did, string pid, string pname, int tele, string date, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Appoinment", ReplyAction="http://tempuri.org/IService1/Update_AppoinmentResponse")]
        System.Threading.Tasks.Task Update_AppoinmentAsync(string aid, string did, string pid, string pname, int tele, string date, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_AppointmentID", ReplyAction="http://tempuri.org/IService1/search_by_AppointmentIDResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Appointment[] search_by_AppointmentID(string apId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_AppointmentID", ReplyAction="http://tempuri.org/IService1/search_by_AppointmentIDResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Appointment[]> search_by_AppointmentIDAsync(string apId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_appointment_id", ReplyAction="http://tempuri.org/IService1/get_max_appointment_idResponse")]
        string get_max_appointment_id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_appointment_id", ReplyAction="http://tempuri.org/IService1/get_max_appointment_idResponse")]
        System.Threading.Tasks.Task<string> get_max_appointment_idAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/view_appointment", ReplyAction="http://tempuri.org/IService1/view_appointmentResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Appointment view_appointment(string aid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/view_appointment", ReplyAction="http://tempuri.org/IService1/view_appointmentResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Appointment> view_appointmentAsync(string aid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_drug", ReplyAction="http://tempuri.org/IService1/Add_drugResponse")]
        void Add_drug(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_drug", ReplyAction="http://tempuri.org/IService1/Add_drugResponse")]
        System.Threading.Tasks.Task Add_drugAsync(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDrugs", ReplyAction="http://tempuri.org/IService1/GetDrugsResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Drug[] GetDrugs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDrugs", ReplyAction="http://tempuri.org/IService1/GetDrugsResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> GetDrugsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Drug", ReplyAction="http://tempuri.org/IService1/Update_DrugResponse")]
        void Update_Drug(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Drug", ReplyAction="http://tempuri.org/IService1/Update_DrugResponse")]
        System.Threading.Tasks.Task Update_DrugAsync(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_Drugid", ReplyAction="http://tempuri.org/IService1/search_by_DrugidResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Drug[] search_by_Drugid(string dgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_Drugid", ReplyAction="http://tempuri.org/IService1/search_by_DrugidResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> search_by_DrugidAsync(string dgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_Drugname", ReplyAction="http://tempuri.org/IService1/search_by_DrugnameResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Drug[] search_by_Drugname(string dgname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_Drugname", ReplyAction="http://tempuri.org/IService1/search_by_DrugnameResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> search_by_DrugnameAsync(string dgname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_ExpiryDate", ReplyAction="http://tempuri.org/IService1/search_by_ExpiryDateResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Drug[] search_by_ExpiryDate(string dgExp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_ExpiryDate", ReplyAction="http://tempuri.org/IService1/search_by_ExpiryDateResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> search_by_ExpiryDateAsync(string dgExp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_drug_id", ReplyAction="http://tempuri.org/IService1/get_max_drug_idResponse")]
        string get_max_drug_id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_drug_id", ReplyAction="http://tempuri.org/IService1/get_max_drug_idResponse")]
        System.Threading.Tasks.Task<string> get_max_drug_idAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Drugs", ReplyAction="http://tempuri.org/IService1/View_DrugsResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Drug View_Drugs(string drID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Drugs", ReplyAction="http://tempuri.org/IService1/View_DrugsResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug> View_DrugsAsync(string drID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Treatement", ReplyAction="http://tempuri.org/IService1/Add_TreatementResponse")]
        void Add_Treatement(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Add_Treatement", ReplyAction="http://tempuri.org/IService1/Add_TreatementResponse")]
        System.Threading.Tasks.Task Add_TreatementAsync(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Treatements", ReplyAction="http://tempuri.org/IService1/Get_TreatementsResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Treatment[] Get_Treatements();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Treatements", ReplyAction="http://tempuri.org/IService1/Get_TreatementsResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment[]> Get_TreatementsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Treatement", ReplyAction="http://tempuri.org/IService1/Update_TreatementResponse")]
        void Update_Treatement(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Treatement", ReplyAction="http://tempuri.org/IService1/Update_TreatementResponse")]
        System.Threading.Tasks.Task Update_TreatementAsync(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_TreatmentId", ReplyAction="http://tempuri.org/IService1/search_by_TreatmentIdResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Treatment[] search_by_TreatmentId(string trId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_TreatmentId", ReplyAction="http://tempuri.org/IService1/search_by_TreatmentIdResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment[]> search_by_TreatmentIdAsync(string trId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_TR_PatientName", ReplyAction="http://tempuri.org/IService1/search_by_TR_PatientNameResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Treatment[] search_by_TR_PatientName(string trName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_by_TR_PatientName", ReplyAction="http://tempuri.org/IService1/search_by_TR_PatientNameResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment[]> search_by_TR_PatientNameAsync(string trName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_treatment_id", ReplyAction="http://tempuri.org/IService1/get_max_treatment_idResponse")]
        string get_max_treatment_id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_treatment_id", ReplyAction="http://tempuri.org/IService1/get_max_treatment_idResponse")]
        System.Threading.Tasks.Task<string> get_max_treatment_idAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Treatement", ReplyAction="http://tempuri.org/IService1/View_TreatementResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Treatment View_Treatement(string pid, string pname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Treatement", ReplyAction="http://tempuri.org/IService1/View_TreatementResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment> View_TreatementAsync(string pid, string pname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_doctor_list", ReplyAction="http://tempuri.org/IService1/get_doctor_listResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Doctor[] get_doctor_list();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_doctor_list", ReplyAction="http://tempuri.org/IService1/get_doctor_listResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> get_doctor_listAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_doctor_id", ReplyAction="http://tempuri.org/IService1/get_max_doctor_idResponse")]
        string get_max_doctor_id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_doctor_id", ReplyAction="http://tempuri.org/IService1/get_max_doctor_idResponse")]
        System.Threading.Tasks.Task<string> get_max_doctor_idAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_Doctor", ReplyAction="http://tempuri.org/IService1/add_DoctorResponse")]
        void add_Doctor(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_Doctor", ReplyAction="http://tempuri.org/IService1/add_DoctorResponse")]
        System.Threading.Tasks.Task add_DoctorAsync(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_doctor", ReplyAction="http://tempuri.org/IService1/Update_doctorResponse")]
        void Update_doctor(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_doctor", ReplyAction="http://tempuri.org/IService1/Update_doctorResponse")]
        System.Threading.Tasks.Task Update_doctorAsync(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_DoctorId", ReplyAction="http://tempuri.org/IService1/search_DoctorIdResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Doctor[] search_DoctorId(string drName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_DoctorId", ReplyAction="http://tempuri.org/IService1/search_DoctorIdResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> search_DoctorIdAsync(string drName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_DoctorName", ReplyAction="http://tempuri.org/IService1/search_DoctorNameResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Doctor[] search_DoctorName(string drName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_DoctorName", ReplyAction="http://tempuri.org/IService1/search_DoctorNameResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> search_DoctorNameAsync(string drName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_DoctorNIC", ReplyAction="http://tempuri.org/IService1/search_DoctorNICResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Doctor[] search_DoctorNIC(string Nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_DoctorNIC", ReplyAction="http://tempuri.org/IService1/search_DoctorNICResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> search_DoctorNICAsync(string Nic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Doctor", ReplyAction="http://tempuri.org/IService1/View_DoctorResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Doctor View_Doctor(string drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Doctor", ReplyAction="http://tempuri.org/IService1/View_DoctorResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor> View_DoctorAsync(string drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_new_payment", ReplyAction="http://tempuri.org/IService1/add_new_paymentResponse")]
        void add_new_payment(string payid, string date, string type, int totamount, int payamount, int balamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_new_payment", ReplyAction="http://tempuri.org/IService1/add_new_paymentResponse")]
        System.Threading.Tasks.Task add_new_paymentAsync(string payid, string date, string type, int totamount, int payamount, int balamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_all_payment", ReplyAction="http://tempuri.org/IService1/get_all_paymentResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Payment[] get_all_payment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_all_payment", ReplyAction="http://tempuri.org/IService1/get_all_paymentResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Payment[]> get_all_paymentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update_payment", ReplyAction="http://tempuri.org/IService1/update_paymentResponse")]
        void update_payment(string payid, string date, string type, int totamount, int payamount, int balamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update_payment", ReplyAction="http://tempuri.org/IService1/update_paymentResponse")]
        System.Threading.Tasks.Task update_paymentAsync(string payid, string date, string type, int totamount, int payamount, int balamount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete_payment", ReplyAction="http://tempuri.org/IService1/delete_paymentResponse")]
        void delete_payment(string payid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete_payment", ReplyAction="http://tempuri.org/IService1/delete_paymentResponse")]
        System.Threading.Tasks.Task delete_paymentAsync(string payid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_PaymentID", ReplyAction="http://tempuri.org/IService1/search_PaymentIDResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Payment[] search_PaymentID(string txt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_PaymentID", ReplyAction="http://tempuri.org/IService1/search_PaymentIDResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Payment[]> search_PaymentIDAsync(string txt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_payment_id", ReplyAction="http://tempuri.org/IService1/get_max_payment_idResponse")]
        string get_max_payment_id();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_max_payment_id", ReplyAction="http://tempuri.org/IService1/get_max_payment_idResponse")]
        System.Threading.Tasks.Task<string> get_max_payment_idAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Payment", ReplyAction="http://tempuri.org/IService1/View_PaymentResponse")]
        YarlHospitalWPF.YarlHospital_Ref.Payment View_Payment(string payID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/View_Payment", ReplyAction="http://tempuri.org/IService1/View_PaymentResponse")]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Payment> View_PaymentAsync(string payID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/create_account", ReplyAction="http://tempuri.org/IService1/create_accountResponse")]
        void create_account(string full_name, string email, string user_name, string password, string r_password, string s_question, string answer, string login_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/create_account", ReplyAction="http://tempuri.org/IService1/create_accountResponse")]
        System.Threading.Tasks.Task create_accountAsync(string full_name, string email, string user_name, string password, string r_password, string s_question, string answer, string login_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        bool login(string uname, string pword, string lType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string uname, string pword, string lType);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="view_Patient", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class view_PatientRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string pid;
        
        public view_PatientRequest() {
        }
        
        public view_PatientRequest(string pid) {
            this.pid = pid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="view_PatientResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class view_PatientResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public YarlHospitalWPF.YarlHospital_Ref.Patient view_PatientResult;
        
        public view_PatientResponse() {
        }
        
        public view_PatientResponse(YarlHospitalWPF.YarlHospital_Ref.Patient view_PatientResult) {
            this.view_PatientResult = view_PatientResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : YarlHospitalWPF.YarlHospital_Ref.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<YarlHospitalWPF.YarlHospital_Ref.IService1>, YarlHospitalWPF.YarlHospital_Ref.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add_Patient(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email) {
            base.Channel.Add_Patient(pid, name, address, nic, gender, dob, country, tele, mob, email);
        }
        
        public System.Threading.Tasks.Task Add_PatientAsync(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email) {
            return base.Channel.Add_PatientAsync(pid, name, address, nic, gender, dob, country, tele, mob, email);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Patient[] get_patients() {
            return base.Channel.get_patients();
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> get_patientsAsync() {
            return base.Channel.get_patientsAsync();
        }
        
        public void update_patient(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email) {
            base.Channel.update_patient(pid, name, address, nic, gender, dob, country, tele, mob, email);
        }
        
        public System.Threading.Tasks.Task update_patientAsync(string pid, string name, string address, string nic, string gender, string dob, string country, int tele, int mob, string email) {
            return base.Channel.update_patientAsync(pid, name, address, nic, gender, dob, country, tele, mob, email);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Patient view_patient(string pid) {
            return base.Channel.view_patient(pid);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient> view_patientAsync(string pid) {
            return base.Channel.view_patientAsync(pid);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Patient[] search(string text) {
            return base.Channel.search(text);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> searchAsync(string text) {
            return base.Channel.searchAsync(text);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Patient[] search_patient_name(string name) {
            return base.Channel.search_patient_name(name);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> search_patient_nameAsync(string name) {
            return base.Channel.search_patient_nameAsync(name);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Patient[] search_nic(string nic) {
            return base.Channel.search_nic(nic);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Patient[]> search_nicAsync(string nic) {
            return base.Channel.search_nicAsync(nic);
        }
        
        public string get_max_patient_id() {
            return base.Channel.get_max_patient_id();
        }
        
        public System.Threading.Tasks.Task<string> get_max_patient_idAsync() {
            return base.Channel.get_max_patient_idAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        YarlHospitalWPF.YarlHospital_Ref.view_PatientResponse YarlHospitalWPF.YarlHospital_Ref.IService1.view_Patient1(YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest request) {
            return base.Channel.view_Patient1(request);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Patient view_Patient1(string pid) {
            YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest inValue = new YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest();
            inValue.pid = pid;
            YarlHospitalWPF.YarlHospital_Ref.view_PatientResponse retVal = ((YarlHospitalWPF.YarlHospital_Ref.IService1)(this)).view_Patient1(inValue);
            return retVal.view_PatientResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.view_PatientResponse> YarlHospitalWPF.YarlHospital_Ref.IService1.view_Patient1Async(YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest request) {
            return base.Channel.view_Patient1Async(request);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.view_PatientResponse> view_Patient1Async(string pid) {
            YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest inValue = new YarlHospitalWPF.YarlHospital_Ref.view_PatientRequest();
            inValue.pid = pid;
            return ((YarlHospitalWPF.YarlHospital_Ref.IService1)(this)).view_Patient1Async(inValue);
        }
        
        public void Add_Appointment(string aid, string did, string pid, string pname, int tele, string date, string time) {
            base.Channel.Add_Appointment(aid, did, pid, pname, tele, date, time);
        }
        
        public System.Threading.Tasks.Task Add_AppointmentAsync(string aid, string did, string pid, string pname, int tele, string date, string time) {
            return base.Channel.Add_AppointmentAsync(aid, did, pid, pname, tele, date, time);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Appointment[] Get_Appointment_List() {
            return base.Channel.Get_Appointment_List();
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Appointment[]> Get_Appointment_ListAsync() {
            return base.Channel.Get_Appointment_ListAsync();
        }
        
        public void Update_Appoinment(string aid, string did, string pid, string pname, int tele, string date, string time) {
            base.Channel.Update_Appoinment(aid, did, pid, pname, tele, date, time);
        }
        
        public System.Threading.Tasks.Task Update_AppoinmentAsync(string aid, string did, string pid, string pname, int tele, string date, string time) {
            return base.Channel.Update_AppoinmentAsync(aid, did, pid, pname, tele, date, time);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Appointment[] search_by_AppointmentID(string apId) {
            return base.Channel.search_by_AppointmentID(apId);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Appointment[]> search_by_AppointmentIDAsync(string apId) {
            return base.Channel.search_by_AppointmentIDAsync(apId);
        }
        
        public string get_max_appointment_id() {
            return base.Channel.get_max_appointment_id();
        }
        
        public System.Threading.Tasks.Task<string> get_max_appointment_idAsync() {
            return base.Channel.get_max_appointment_idAsync();
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Appointment view_appointment(string aid) {
            return base.Channel.view_appointment(aid);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Appointment> view_appointmentAsync(string aid) {
            return base.Channel.view_appointmentAsync(aid);
        }
        
        public void Add_drug(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity) {
            base.Channel.Add_drug(drugID, drugName, SciName, dateManf, dateExp, price, quantity);
        }
        
        public System.Threading.Tasks.Task Add_drugAsync(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity) {
            return base.Channel.Add_drugAsync(drugID, drugName, SciName, dateManf, dateExp, price, quantity);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Drug[] GetDrugs() {
            return base.Channel.GetDrugs();
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> GetDrugsAsync() {
            return base.Channel.GetDrugsAsync();
        }
        
        public void Update_Drug(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity) {
            base.Channel.Update_Drug(drugID, drugName, SciName, dateManf, dateExp, price, quantity);
        }
        
        public System.Threading.Tasks.Task Update_DrugAsync(string drugID, string drugName, string SciName, string dateManf, string dateExp, int price, int quantity) {
            return base.Channel.Update_DrugAsync(drugID, drugName, SciName, dateManf, dateExp, price, quantity);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Drug[] search_by_Drugid(string dgId) {
            return base.Channel.search_by_Drugid(dgId);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> search_by_DrugidAsync(string dgId) {
            return base.Channel.search_by_DrugidAsync(dgId);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Drug[] search_by_Drugname(string dgname) {
            return base.Channel.search_by_Drugname(dgname);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> search_by_DrugnameAsync(string dgname) {
            return base.Channel.search_by_DrugnameAsync(dgname);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Drug[] search_by_ExpiryDate(string dgExp) {
            return base.Channel.search_by_ExpiryDate(dgExp);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug[]> search_by_ExpiryDateAsync(string dgExp) {
            return base.Channel.search_by_ExpiryDateAsync(dgExp);
        }
        
        public string get_max_drug_id() {
            return base.Channel.get_max_drug_id();
        }
        
        public System.Threading.Tasks.Task<string> get_max_drug_idAsync() {
            return base.Channel.get_max_drug_idAsync();
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Drug View_Drugs(string drID) {
            return base.Channel.View_Drugs(drID);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Drug> View_DrugsAsync(string drID) {
            return base.Channel.View_DrugsAsync(drID);
        }
        
        public void Add_Treatement(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays) {
            base.Channel.Add_Treatement(tid, pid, fullname, visitdate, diagnos, nxtvisitdate, nxtvisittime, drugused, timesperday, numofdays);
        }
        
        public System.Threading.Tasks.Task Add_TreatementAsync(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays) {
            return base.Channel.Add_TreatementAsync(tid, pid, fullname, visitdate, diagnos, nxtvisitdate, nxtvisittime, drugused, timesperday, numofdays);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Treatment[] Get_Treatements() {
            return base.Channel.Get_Treatements();
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment[]> Get_TreatementsAsync() {
            return base.Channel.Get_TreatementsAsync();
        }
        
        public void Update_Treatement(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays) {
            base.Channel.Update_Treatement(tid, pid, fullname, visitdate, diagnos, nxtvisitdate, nxtvisittime, drugused, timesperday, numofdays);
        }
        
        public System.Threading.Tasks.Task Update_TreatementAsync(string tid, string pid, string fullname, string visitdate, string diagnos, string nxtvisitdate, string nxtvisittime, string drugused, int timesperday, int numofdays) {
            return base.Channel.Update_TreatementAsync(tid, pid, fullname, visitdate, diagnos, nxtvisitdate, nxtvisittime, drugused, timesperday, numofdays);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Treatment[] search_by_TreatmentId(string trId) {
            return base.Channel.search_by_TreatmentId(trId);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment[]> search_by_TreatmentIdAsync(string trId) {
            return base.Channel.search_by_TreatmentIdAsync(trId);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Treatment[] search_by_TR_PatientName(string trName) {
            return base.Channel.search_by_TR_PatientName(trName);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment[]> search_by_TR_PatientNameAsync(string trName) {
            return base.Channel.search_by_TR_PatientNameAsync(trName);
        }
        
        public string get_max_treatment_id() {
            return base.Channel.get_max_treatment_id();
        }
        
        public System.Threading.Tasks.Task<string> get_max_treatment_idAsync() {
            return base.Channel.get_max_treatment_idAsync();
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Treatment View_Treatement(string pid, string pname) {
            return base.Channel.View_Treatement(pid, pname);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Treatment> View_TreatementAsync(string pid, string pname) {
            return base.Channel.View_TreatementAsync(pid, pname);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Doctor[] get_doctor_list() {
            return base.Channel.get_doctor_list();
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> get_doctor_listAsync() {
            return base.Channel.get_doctor_listAsync();
        }
        
        public string get_max_doctor_id() {
            return base.Channel.get_max_doctor_id();
        }
        
        public System.Threading.Tasks.Task<string> get_max_doctor_idAsync() {
            return base.Channel.get_max_doctor_idAsync();
        }
        
        public void add_Doctor(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email) {
            base.Channel.add_Doctor(docId, docName, spec, gen, dob, address, country, mob, nic, email);
        }
        
        public System.Threading.Tasks.Task add_DoctorAsync(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email) {
            return base.Channel.add_DoctorAsync(docId, docName, spec, gen, dob, address, country, mob, nic, email);
        }
        
        public void Update_doctor(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email) {
            base.Channel.Update_doctor(docId, docName, spec, gen, dob, address, country, mob, nic, email);
        }
        
        public System.Threading.Tasks.Task Update_doctorAsync(string docId, string docName, string spec, string gen, string dob, string address, string country, int mob, string nic, string email) {
            return base.Channel.Update_doctorAsync(docId, docName, spec, gen, dob, address, country, mob, nic, email);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Doctor[] search_DoctorId(string drName) {
            return base.Channel.search_DoctorId(drName);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> search_DoctorIdAsync(string drName) {
            return base.Channel.search_DoctorIdAsync(drName);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Doctor[] search_DoctorName(string drName) {
            return base.Channel.search_DoctorName(drName);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> search_DoctorNameAsync(string drName) {
            return base.Channel.search_DoctorNameAsync(drName);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Doctor[] search_DoctorNIC(string Nic) {
            return base.Channel.search_DoctorNIC(Nic);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor[]> search_DoctorNICAsync(string Nic) {
            return base.Channel.search_DoctorNICAsync(Nic);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Doctor View_Doctor(string drId) {
            return base.Channel.View_Doctor(drId);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Doctor> View_DoctorAsync(string drId) {
            return base.Channel.View_DoctorAsync(drId);
        }
        
        public void add_new_payment(string payid, string date, string type, int totamount, int payamount, int balamount) {
            base.Channel.add_new_payment(payid, date, type, totamount, payamount, balamount);
        }
        
        public System.Threading.Tasks.Task add_new_paymentAsync(string payid, string date, string type, int totamount, int payamount, int balamount) {
            return base.Channel.add_new_paymentAsync(payid, date, type, totamount, payamount, balamount);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Payment[] get_all_payment() {
            return base.Channel.get_all_payment();
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Payment[]> get_all_paymentAsync() {
            return base.Channel.get_all_paymentAsync();
        }
        
        public void update_payment(string payid, string date, string type, int totamount, int payamount, int balamount) {
            base.Channel.update_payment(payid, date, type, totamount, payamount, balamount);
        }
        
        public System.Threading.Tasks.Task update_paymentAsync(string payid, string date, string type, int totamount, int payamount, int balamount) {
            return base.Channel.update_paymentAsync(payid, date, type, totamount, payamount, balamount);
        }
        
        public void delete_payment(string payid) {
            base.Channel.delete_payment(payid);
        }
        
        public System.Threading.Tasks.Task delete_paymentAsync(string payid) {
            return base.Channel.delete_paymentAsync(payid);
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Payment[] search_PaymentID(string txt) {
            return base.Channel.search_PaymentID(txt);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Payment[]> search_PaymentIDAsync(string txt) {
            return base.Channel.search_PaymentIDAsync(txt);
        }
        
        public string get_max_payment_id() {
            return base.Channel.get_max_payment_id();
        }
        
        public System.Threading.Tasks.Task<string> get_max_payment_idAsync() {
            return base.Channel.get_max_payment_idAsync();
        }
        
        public YarlHospitalWPF.YarlHospital_Ref.Payment View_Payment(string payID) {
            return base.Channel.View_Payment(payID);
        }
        
        public System.Threading.Tasks.Task<YarlHospitalWPF.YarlHospital_Ref.Payment> View_PaymentAsync(string payID) {
            return base.Channel.View_PaymentAsync(payID);
        }
        
        public void create_account(string full_name, string email, string user_name, string password, string r_password, string s_question, string answer, string login_type) {
            base.Channel.create_account(full_name, email, user_name, password, r_password, s_question, answer, login_type);
        }
        
        public System.Threading.Tasks.Task create_accountAsync(string full_name, string email, string user_name, string password, string r_password, string s_question, string answer, string login_type) {
            return base.Channel.create_accountAsync(full_name, email, user_name, password, r_password, s_question, answer, login_type);
        }
        
        public bool login(string uname, string pword, string lType) {
            return base.Channel.login(uname, pword, lType);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string uname, string pword, string lType) {
            return base.Channel.loginAsync(uname, pword, lType);
        }
    }
}
